@charset "utf-8";
/* core.css 사이트 전체 공통 디자인*/
@import url("./cmm/font/pretendard-gov.css");
/*default font*/
html {
  font-size: 62.5%;
}
*{
  font-family: Pretendard GOV;
}
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font: inherit;
  box-sizing: border-box;
	vertical-align: baseline;
  line-height: 1.5;
  word-break: keep-all;
  word-wrap: break-word;
}

body, div, p, h1, h2, h3, h4, h5, h6, ul, ol, li, dl, dt, dd, table, th, td, form, fieldset, legend, input, textarea, a, button, select, ul, li, span, em{margin: 0;padding: 0;box-sizing: border-box;font-family: 'Pretendard GOV','AppleGothic', 'Malgun Gothic','맑은 고딕', '돋음','Dotum','Apple SD Gothic Neo', Arial, Helvetica, sans-serif;}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
  font-size: 1.7rem;
}
ol, ul {
	list-style: none;
}
a{
  text-decoration: none;
  color: var(--font-default);
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/*custom Scrollbar*/
::-webkit-scrollbar {
  width: 8px;  /* 스크롤바의 너비 */
  height: 8px;
}

::-webkit-scrollbar-thumb {
  height: 30%; /* 스크롤바의 길이 */
  background: #D8DFEB; /* 스크롤바의 색상 */
  border-radius: 50px;
}

::-webkit-scrollbar-track {
  background: #F7F9FC;  /*스크롤바 뒷 배경 색상*/
}

/*checkBox, radio, switch custom*/
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type=checkbox],
  input[type=radio] {
      --active: #7A64E4;
      --active-inner: #fff;
      --focus: 2px var(--Primary-100);
      --border: #C2C6CC;
      --border-hover: #7A64E4;
      --background: #fff;
      --disabled: #F6F8FF;
      --disabled-inner: #E1E6F9;
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 21px;
      outline: none;
      display: inline-block;
      vertical-align: top;
      position: relative;
      margin: 0;
      cursor: pointer;
      border: 1px solid var(--bc, var(--border));
      background: var(--b, var(--background));
      transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }
  input[type=checkbox]:after,
  input[type=radio]:after {
      content: "";
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }
  input[type=checkbox]:checked,
  input[type=radio]:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: .6s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
  input[type=checkbox]:disabled,
  input[type=radio]:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: 0.9;
    }
  input[type=checkbox]:disabled:checked,
  input[type=radio]:disabled:checked {
      --b: var(--disabled-inner);
      --bc: var(--border);
    }
  input[type=checkbox]:disabled + label,
  input[type=radio]:disabled + label {
      cursor: not-allowed;
    }
  input[type=checkbox]:hover:not(:checked):not(:disabled),
  input[type=radio]:hover:not(:checked):not(:disabled) {
      --bc: var(--border-hover);
    }
  input[type=checkbox]:focus,
  input[type=radio]:focus {
      box-shadow: 0 0 0 var(--focus);
    }
  input[type=checkbox]:not(.switch),
  input[type=radio]:not(.switch) {
      width: 21px;
    }
  input[type=checkbox]:not(.switch):after,
  input[type=radio]:not(.switch):after {
      opacity: var(--o, 0);
    }
  input[type=checkbox]:not(.switch):checked,
  input[type=radio]:not(.switch):checked {
      --o: 1;
    }
  input[type=checkbox] + label,
  input[type=radio] + label {
      font-size: 14px;
      line-height: 21px;
      display: inline-block;
      vertical-align: top;
      cursor: pointer;
      margin-left: 4px;
    }

  input[type=checkbox]:not(.switch) {
    border-radius: 7px;
  }
  input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 6px;
    top: 3px;
    transform: rotate(var(--r, 20deg));
  }
  input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
  }
  input[type=checkbox].switch {
    width: 38px;
    border-radius: 11px;
  }
  input[type=checkbox].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
  }
  input[type=checkbox].switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
  }
  input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
  }

  input[type=radio] {
    border-radius: 50%;
  }
  input[type=radio]:after {
    width: 19px;
    height: 19px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, 0.7));
  }
  input[type=radio]:checked {
    --s: .5;
  }
}